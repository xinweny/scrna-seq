cv.cv.plot.list[[i]] <- cv.cv.plot
}
ggsave(glue("./data/GSE139944/transcriptional_noise/CVvsCV/sciPlex3_CVvsCV_custom_{cell.type}_{product}_{d}.png"),
grid.arrange(grobs=cv.cv.plot.list,
ncol=1, nrow=3,
top=textGrob(glue("Coefficient of variation (CV) of protein coding genes
in {cell.type} cells for {product}_{d} vs. Vehicle (Nrep={nrep.vehicle})"),
gp=gpar(fontsize=20, font=2))),
width=30, height=90, units="cm")
# Plot CV vs. CV of product_dose vs. vehicle
cv.cv.plot.list <- list()
cv.diff.thresh <- 2
rpm.diff.thresh <- 0.1
for (i in 1:length(vehicles)) {
cv.cv <- data.frame(cv.df[cv.df$sample == vehicles[i], "cv"],
cv.df[cv.df$sample == paste0(product, "_", d), "cv"],
cv.df[cv.df$sample == vehicles[i], "mean_rpm"],
cv.df[cv.df$sample == paste0(product, "_", d), "mean_rpm"],
cv.df[cv.df$sample == vehicles[i], "gene_short_name"])
names(cv.cv) <- c("vehicle_cv", "treatment_cv", "vehicle_rpm", "treatment_rpm","gene_short_name")
cv.cv$cv_diff <- cv.cv$treatment_cv - cv.cv$vehicle_cv
cv.cv$cv_direction <- ifelse(cv.cv$treatment_cv > cv.cv$vehicle_cv, "UP", "DOWN")
cv.cv$rpm_diff <- (cv.cv$treatment_rpm - cv.cv$vehicle_rpm) / cv.cv$vehicle_rpm
cv.cv <- cv.cv %>%
mutate(label=ifelse(abs(cv_diff) > cv.diff.thresh & abs(rpm_diff) < rpm.diff.thresh,
gene_short_name, ""))
cv.cv <- drop_na(cv.cv, vehicle_cv, treatment_cv)
cv.cv.plot <- cv.cv %>%
ggplot(aes(x=log2(vehicle_cv), y=log2(treatment_cv))) +
geom_abline(intercept=0,
slope=1,
linetype="dashed", size=0.5, color="gray") +
geom_hline(yintercept=0) +
geom_vline(xintercept=0) +
geom_point(aes(fill=cv_direction),
colour="black", pch=21) +
geom_label_repel(data=cv.cv,
aes(label=label),
size=2, segment.alpha=0.5, fill="white",
box.padding=0.25,
force=5,
max.overlaps=Inf) +
xlab(glue("log2(CV ({vehicles[i]}))")) +
ylab(glue("log2(CV ({product}_{d}))")) +
labs(title=glue("{product}_{d} (nCells={ncells[[paste0(cell.type, '_', product, '_', d)]]}) vs. {vehicles[i]} (nCells={ncells[[paste0(cell.type, '_', vehicles[i])]]})"),
subtitle=glue("N={cv.cv %>% drop_na(vehicle_cv, treatment_cv) %>% nrow()}, nUP={cv.cv %>% drop_na(vehicle_cv, treatment_cv) %>% filter(cv_direction == 'UP') %>% nrow()}, nDOWN={cv.cv %>% drop_na(vehicle_cv, treatment_cv) %>% filter(cv_direction == 'DOWN') %>% nrow()}
{cv.cv %>% .$label %>% .[!is.na(.) & . != ''] %>% length()} genes with ΔCV > {cv.diff.thresh} and ΔRPM < {rpm.diff.thresh * 100}%"),
fill="CV direction")
cv.cv.plot.list[[i]] <- cv.cv.plot
}
ggsave(glue("./data/GSE139944/transcriptional_noise/CVvsCV/sciPlex3_CVvsCV_custom_{cell.type}_{product}_{d}.png"),
grid.arrange(grobs=cv.cv.plot.list,
ncol=1, nrow=3,
top=textGrob(glue("Coefficient of variation (CV) of protein coding genes
in {cell.type} cells for {product}_{d} vs. Vehicle (Nrep={nrep.vehicle})"),
gp=gpar(fontsize=20, font=2))),
width=30, height=90, units="cm")
# Plot CV vs. CV of product_dose vs. vehicle
cv.cv.plot.list <- list()
cv.diff.thresh <- 2
rpm.diff.thresh <- 0.1
for (i in 1:length(vehicles)) {
cv.cv <- data.frame(cv.df[cv.df$sample == vehicles[i], "cv"],
cv.df[cv.df$sample == paste0(product, "_", d), "cv"],
cv.df[cv.df$sample == vehicles[i], "mean_rpm"],
cv.df[cv.df$sample == paste0(product, "_", d), "mean_rpm"],
cv.df[cv.df$sample == vehicles[i], "gene_short_name"])
names(cv.cv) <- c("vehicle_cv", "treatment_cv", "vehicle_rpm", "treatment_rpm","gene_short_name")
cv.cv$cv_diff <- cv.cv$treatment_cv - cv.cv$vehicle_cv
cv.cv$cv_direction <- ifelse(cv.cv$treatment_cv > cv.cv$vehicle_cv, "UP", "DOWN")
cv.cv$rpm_diff <- (cv.cv$treatment_rpm - cv.cv$vehicle_rpm) / cv.cv$vehicle_rpm
cv.cv <- cv.cv %>%
mutate(label=ifelse(abs(cv_diff) > cv.diff.thresh & abs(rpm_diff) < rpm.diff.thresh,
gene_short_name, ""))
cv.cv <- drop_na(cv.cv, vehicle_cv, treatment_cv)
cv.cv.plot <- cv.cv %>%
ggplot(aes(x=log2(vehicle_cv), y=log2(treatment_cv))) +
geom_abline(intercept=0,
slope=1,
linetype="dashed", size=0.5, color="gray") +
geom_hline(yintercept=0) +
geom_vline(xintercept=0) +
geom_point(aes(fill=cv_direction),
colour="black", pch=21) +
geom_label_repel(data=cv.cv,
aes(label=label),
size=2, segment.alpha=0.5, fill="white",
box.padding=0.1,
force=5,
max.overlaps=Inf) +
xlab(glue("log2(CV ({vehicles[i]}))")) +
ylab(glue("log2(CV ({product}_{d}))")) +
labs(title=glue("{product}_{d} (nCells={ncells[[paste0(cell.type, '_', product, '_', d)]]}) vs. {vehicles[i]} (nCells={ncells[[paste0(cell.type, '_', vehicles[i])]]})"),
subtitle=glue("N={cv.cv %>% drop_na(vehicle_cv, treatment_cv) %>% nrow()}, nUP={cv.cv %>% drop_na(vehicle_cv, treatment_cv) %>% filter(cv_direction == 'UP') %>% nrow()}, nDOWN={cv.cv %>% drop_na(vehicle_cv, treatment_cv) %>% filter(cv_direction == 'DOWN') %>% nrow()}
{cv.cv %>% .$label %>% .[!is.na(.) & . != ''] %>% length()} genes with ΔCV > {cv.diff.thresh} and ΔRPM < {rpm.diff.thresh * 100}%"),
fill="CV direction")
cv.cv.plot.list[[i]] <- cv.cv.plot
}
ggsave(glue("./data/GSE139944/transcriptional_noise/CVvsCV/sciPlex3_CVvsCV_custom_{cell.type}_{product}_{d}.png"),
grid.arrange(grobs=cv.cv.plot.list,
ncol=1, nrow=3,
top=textGrob(glue("Coefficient of variation (CV) of protein coding genes
in {cell.type} cells for {product}_{d} vs. Vehicle (Nrep={nrep.vehicle})"),
gp=gpar(fontsize=20, font=2))),
width=30, height=90, units="cm")
# Plot CV vs. CV of product_dose vs. vehicle
cv.cv.plot.list <- list()
cv.diff.thresh <- 2
rpm.diff.thresh <- 0.1
for (i in 1:length(vehicles)) {
cv.cv <- data.frame(cv.df[cv.df$sample == vehicles[i], "cv"],
cv.df[cv.df$sample == paste0(product, "_", d), "cv"],
cv.df[cv.df$sample == vehicles[i], "mean_rpm"],
cv.df[cv.df$sample == paste0(product, "_", d), "mean_rpm"],
cv.df[cv.df$sample == vehicles[i], "gene_short_name"])
names(cv.cv) <- c("vehicle_cv", "treatment_cv", "vehicle_rpm", "treatment_rpm","gene_short_name")
cv.cv$cv_diff <- cv.cv$treatment_cv - cv.cv$vehicle_cv
cv.cv$cv_direction <- ifelse(cv.cv$treatment_cv > cv.cv$vehicle_cv, "UP", "DOWN")
cv.cv$rpm_diff <- (cv.cv$treatment_rpm - cv.cv$vehicle_rpm) / cv.cv$vehicle_rpm
cv.cv <- cv.cv %>%
mutate(label=ifelse(abs(cv_diff) > cv.diff.thresh & abs(rpm_diff) < rpm.diff.thresh,
gene_short_name, ""))
cv.cv <- drop_na(cv.cv, vehicle_cv, treatment_cv)
cv.cv.plot <- cv.cv %>%
ggplot(aes(x=log2(vehicle_cv), y=log2(treatment_cv))) +
geom_abline(intercept=0,
slope=1,
linetype="dashed", size=0.5, color="gray") +
geom_hline(yintercept=0) +
geom_vline(xintercept=0) +
geom_point(aes(fill=cv_direction),
colour="black", pch=21) +
xlim(c(0, 4.5)) +
ylim(c(0, 4.5)) +
geom_label_repel(data=cv.cv,
aes(label=label),
size=2, segment.alpha=0.5, fill="white",
box.padding=0.1,
force=5,
max.overlaps=Inf) +
xlab(glue("log2(CV ({vehicles[i]}))")) +
ylab(glue("log2(CV ({product}_{d}))")) +
labs(title=glue("{product}_{d} (nCells={ncells[[paste0(cell.type, '_', product, '_', d)]]}) vs. {vehicles[i]} (nCells={ncells[[paste0(cell.type, '_', vehicles[i])]]})"),
subtitle=glue("N={cv.cv %>% drop_na(vehicle_cv, treatment_cv) %>% nrow()}, nUP={cv.cv %>% drop_na(vehicle_cv, treatment_cv) %>% filter(cv_direction == 'UP') %>% nrow()}, nDOWN={cv.cv %>% drop_na(vehicle_cv, treatment_cv) %>% filter(cv_direction == 'DOWN') %>% nrow()}
{cv.cv %>% .$label %>% .[!is.na(.) & . != ''] %>% length()} genes with ΔCV > {cv.diff.thresh} and ΔRPM < {rpm.diff.thresh * 100}%"),
fill="CV direction")
cv.cv.plot.list[[i]] <- cv.cv.plot
}
ggsave(glue("./data/GSE139944/transcriptional_noise/CVvsCV/sciPlex3_CVvsCV_custom_{cell.type}_{product}_{d}.png"),
grid.arrange(grobs=cv.cv.plot.list,
ncol=1, nrow=3,
top=textGrob(glue("Coefficient of variation (CV) of protein coding genes
in {cell.type} cells for {product}_{d} vs. Vehicle (Nrep={nrep.vehicle})"),
gp=gpar(fontsize=20, font=2))),
width=30, height=90, units="cm")
# Plot CV vs. CV of product_dose vs. vehicle
cv.cv.plot.list <- list()
cv.diff.thresh <- 2
rpm.diff.thresh <- 0.1
for (i in 1:length(vehicles)) {
cv.cv <- data.frame(cv.df[cv.df$sample == vehicles[i], "cv"],
cv.df[cv.df$sample == paste0(product, "_", d), "cv"],
cv.df[cv.df$sample == vehicles[i], "mean_rpm"],
cv.df[cv.df$sample == paste0(product, "_", d), "mean_rpm"],
cv.df[cv.df$sample == vehicles[i], "gene_short_name"])
names(cv.cv) <- c("vehicle_cv", "treatment_cv", "vehicle_rpm", "treatment_rpm","gene_short_name")
cv.cv$cv_diff <- cv.cv$treatment_cv - cv.cv$vehicle_cv
cv.cv$cv_direction <- ifelse(cv.cv$treatment_cv > cv.cv$vehicle_cv, "UP", "DOWN")
cv.cv$rpm_diff <- (cv.cv$treatment_rpm - cv.cv$vehicle_rpm) / cv.cv$vehicle_rpm
cv.cv <- cv.cv %>%
mutate(label=ifelse(abs(cv_diff) > cv.diff.thresh & abs(rpm_diff) < rpm.diff.thresh,
gene_short_name, ""))
cv.cv <- drop_na(cv.cv, vehicle_cv, treatment_cv)
cv.cv.plot <- cv.cv %>%
ggplot(aes(x=log2(vehicle_cv), y=log2(treatment_cv))) +
geom_abline(intercept=0,
slope=1,
linetype="dashed", size=0.5, color="gray") +
geom_hline(yintercept=0) +
geom_vline(xintercept=0) +
geom_point(aes(fill=cv_direction),
colour="black", pch=21) +
xlim(c(0, 4.5)) +
ylim(c(0, 4.5)) +
geom_label_repel(data=cv.cv,
aes(label=label),
size=2, segment.alpha=0.5, fill="white",
box.padding=0.1,
force=2,
max.overlaps=Inf) +
xlab(glue("log2(CV ({vehicles[i]}))")) +
ylab(glue("log2(CV ({product}_{d}))")) +
labs(title=glue("{product}_{d} (nCells={ncells[[paste0(cell.type, '_', product, '_', d)]]}) vs. {vehicles[i]} (nCells={ncells[[paste0(cell.type, '_', vehicles[i])]]})"),
subtitle=glue("N={cv.cv %>% drop_na(vehicle_cv, treatment_cv) %>% nrow()}, nUP={cv.cv %>% drop_na(vehicle_cv, treatment_cv) %>% filter(cv_direction == 'UP') %>% nrow()}, nDOWN={cv.cv %>% drop_na(vehicle_cv, treatment_cv) %>% filter(cv_direction == 'DOWN') %>% nrow()}
{cv.cv %>% .$label %>% .[!is.na(.) & . != ''] %>% length()} genes with ΔCV > {cv.diff.thresh} and ΔRPM < {rpm.diff.thresh * 100}%"),
fill="CV direction")
cv.cv.plot.list[[i]] <- cv.cv.plot
}
ggsave(glue("./data/GSE139944/transcriptional_noise/CVvsCV/sciPlex3_CVvsCV_custom_{cell.type}_{product}_{d}.png"),
grid.arrange(grobs=cv.cv.plot.list,
ncol=1, nrow=3,
top=textGrob(glue("Coefficient of variation (CV) of protein coding genes
in {cell.type} cells for {product}_{d} vs. Vehicle (Nrep={nrep.vehicle})"),
gp=gpar(fontsize=20, font=2))),
width=30, height=90, units="cm")
max(cv.cv$vehicle_cv)
log2(max(cv.cv$vehicle_cv))
# Plot CV vs. CV of product_dose vs. vehicle
cv.cv.plot.list <- list()
cv.diff.thresh <- 1.5
rpm.diff.thresh <- 0.1
for (i in 1:length(vehicles)) {
cv.cv <- data.frame(cv.df[cv.df$sample == vehicles[i], "cv"],
cv.df[cv.df$sample == paste0(product, "_", d), "cv"],
cv.df[cv.df$sample == vehicles[i], "mean_rpm"],
cv.df[cv.df$sample == paste0(product, "_", d), "mean_rpm"],
cv.df[cv.df$sample == vehicles[i], "gene_short_name"])
names(cv.cv) <- c("vehicle_cv", "treatment_cv", "vehicle_rpm", "treatment_rpm","gene_short_name")
cv.cv$cv_diff <- cv.cv$treatment_cv / cv.cv$vehicle_cv
cv.cv$cv_direction <- ifelse(cv.cv$treatment_cv > cv.cv$vehicle_cv, "UP", "DOWN")
cv.cv$rpm_diff <- (cv.cv$treatment_rpm - cv.cv$vehicle_rpm) / cv.cv$vehicle_rpm
cv.cv <- cv.cv %>%
mutate(label=ifelse(abs(cv_diff) > cv.diff.thresh & abs(rpm_diff) < rpm.diff.thresh,
gene_short_name, ""))
cv.cv <- drop_na(cv.cv, vehicle_cv, treatment_cv)
cv.cv.plot <- cv.cv %>%
ggplot(aes(x=log2(vehicle_cv), y=log2(treatment_cv))) +
geom_abline(intercept=0,
slope=1,
linetype="dashed", size=0.5, color="gray") +
geom_hline(yintercept=0) +
geom_vline(xintercept=0) +
geom_point(aes(fill=cv_direction),
colour="black", pch=21) +
xlim(c(0, log2(max(cv.cv$vehicle_cv)) + 0.5)) +
ylim(c(0, log2(max(cv.cv$treatment_cv)) + 0.5)) +
geom_label_repel(data=cv.cv,
aes(label=label),
size=2, segment.alpha=0.5, fill="white",
box.padding=0.1,
force=2,
max.overlaps=Inf) +
xlab(glue("log2(CV ({vehicles[i]}))")) +
ylab(glue("log2(CV ({product}_{d}))")) +
labs(title=glue("{product}_{d} (nCells={ncells[[paste0(cell.type, '_', product, '_', d)]]}) vs. {vehicles[i]} (nCells={ncells[[paste0(cell.type, '_', vehicles[i])]]})"),
subtitle=glue("N={cv.cv %>% drop_na(vehicle_cv, treatment_cv) %>% nrow()}, nUP={cv.cv %>% drop_na(vehicle_cv, treatment_cv) %>% filter(cv_direction == 'UP') %>% nrow()}, nDOWN={cv.cv %>% drop_na(vehicle_cv, treatment_cv) %>% filter(cv_direction == 'DOWN') %>% nrow()}
{cv.cv %>% .$label %>% .[!is.na(.) & . != ''] %>% length()} genes with CV fold-change > {cv.diff.thresh} and RPM % difference < {rpm.diff.thresh * 100}%"),
fill="CV direction")
cv.cv.plot.list[[i]] <- cv.cv.plot
}
ggsave(glue("./data/GSE139944/transcriptional_noise/CVvsCV/sciPlex3_CVvsCV_custom_{cell.type}_{product}_{d}.png"),
grid.arrange(grobs=cv.cv.plot.list,
ncol=1, nrow=3,
top=textGrob(glue("Coefficient of variation (CV) of protein coding genes
in {cell.type} cells for {product}_{d} vs. Vehicle (Nrep={nrep.vehicle})"),
gp=gpar(fontsize=20, font=2))),
width=30, height=90, units="cm")
1/1.5
1/2
# Plot CV vs. CV of product_dose vs. vehicle
cv.cv.plot.list <- list()
cv.diff.thresh <- 1.5
rpm.diff.thresh <- 0.1
for (i in 1:length(vehicles)) {
cv.cv <- data.frame(cv.df[cv.df$sample == vehicles[i], "cv"],
cv.df[cv.df$sample == paste0(product, "_", d), "cv"],
cv.df[cv.df$sample == vehicles[i], "mean_rpm"],
cv.df[cv.df$sample == paste0(product, "_", d), "mean_rpm"],
cv.df[cv.df$sample == vehicles[i], "gene_short_name"])
names(cv.cv) <- c("vehicle_cv", "treatment_cv", "vehicle_rpm", "treatment_rpm","gene_short_name")
cv.cv$cv_diff <- cv.cv$treatment_cv / cv.cv$vehicle_cv
cv.cv$cv_direction <- ifelse(cv.cv$treatment_cv > cv.cv$vehicle_cv, "UP", "DOWN")
cv.cv$rpm_diff <- (cv.cv$treatment_rpm - cv.cv$vehicle_rpm) / cv.cv$vehicle_rpm
cv.cv <- cv.cv %>%
mutate(label=ifelse((cv_diff > cv.diff.thresh | cv.diff < 1 / cv.diff.thresh) & abs(rpm_diff) < rpm.diff.thresh,
gene_short_name, ""))
cv.cv <- drop_na(cv.cv, vehicle_cv, treatment_cv)
cv.cv.plot <- cv.cv %>%
ggplot(aes(x=log2(vehicle_cv), y=log2(treatment_cv))) +
geom_abline(intercept=0,
slope=1,
linetype="dashed", size=0.5, color="gray") +
geom_hline(yintercept=0) +
geom_vline(xintercept=0) +
geom_point(aes(fill=cv_direction),
colour="black", pch=21) +
geom_label_repel(data=cv.cv,
aes(label=label),
size=2, segment.alpha=0.5, fill="white",
box.padding=0.1,
force=2,
max.overlaps=Inf) +
xlab(glue("log2(CV ({vehicles[i]}))")) +
ylab(glue("log2(CV ({product}_{d}))")) +
labs(title=glue("{product}_{d} (nCells={ncells[[paste0(cell.type, '_', product, '_', d)]]}) vs. {vehicles[i]} (nCells={ncells[[paste0(cell.type, '_', vehicles[i])]]})"),
subtitle=glue("N={cv.cv %>% drop_na(vehicle_cv, treatment_cv) %>% nrow()}, nUP={cv.cv %>% drop_na(vehicle_cv, treatment_cv) %>% filter(cv_direction == 'UP') %>% nrow()}, nDOWN={cv.cv %>% drop_na(vehicle_cv, treatment_cv) %>% filter(cv_direction == 'DOWN') %>% nrow()}
{cv.cv %>% .$label %>% .[!is.na(.) & . != ''] %>% length()} genes with CV fold-change > {cv.diff.thresh} and RPM % difference < {rpm.diff.thresh * 100}%"),
fill="CV direction")
cv.cv.plot.list[[i]] <- cv.cv.plot
}
ggsave(glue("./data/GSE139944/transcriptional_noise/CVvsCV/sciPlex3_CVvsCV_custom_{cell.type}_{product}_{d}.png"),
grid.arrange(grobs=cv.cv.plot.list,
ncol=1, nrow=3,
top=textGrob(glue("Coefficient of variation (CV) of protein coding genes
in {cell.type} cells for {product}_{d} vs. Vehicle (Nrep={nrep.vehicle})"),
gp=gpar(fontsize=20, font=2))),
width=30, height=90, units="cm")
# Plot CV vs. CV of product_dose vs. vehicle
cv.cv.plot.list <- list()
cv.diff.thresh <- 1.5
rpm.diff.thresh <- 0.1
for (i in 1:length(vehicles)) {
cv.cv <- data.frame(cv.df[cv.df$sample == vehicles[i], "cv"],
cv.df[cv.df$sample == paste0(product, "_", d), "cv"],
cv.df[cv.df$sample == vehicles[i], "mean_rpm"],
cv.df[cv.df$sample == paste0(product, "_", d), "mean_rpm"],
cv.df[cv.df$sample == vehicles[i], "gene_short_name"])
names(cv.cv) <- c("vehicle_cv", "treatment_cv", "vehicle_rpm", "treatment_rpm","gene_short_name")
cv.cv$cv_diff <- cv.cv$treatment_cv / cv.cv$vehicle_cv
cv.cv$cv_direction <- ifelse(cv.cv$treatment_cv > cv.cv$vehicle_cv, "UP", "DOWN")
cv.cv$rpm_diff <- (cv.cv$treatment_rpm - cv.cv$vehicle_rpm) / cv.cv$vehicle_rpm
cv.cv <- cv.cv %>%
mutate(label=ifelse((cv_diff > cv.diff.thresh | cv_diff < 1 / cv.diff.thresh) & abs(rpm_diff) < rpm.diff.thresh,
gene_short_name, ""))
cv.cv <- drop_na(cv.cv, vehicle_cv, treatment_cv)
cv.cv.plot <- cv.cv %>%
ggplot(aes(x=log2(vehicle_cv), y=log2(treatment_cv))) +
geom_abline(intercept=0,
slope=1,
linetype="dashed", size=0.5, color="gray") +
geom_hline(yintercept=0) +
geom_vline(xintercept=0) +
geom_point(aes(fill=cv_direction),
colour="black", pch=21) +
geom_label_repel(data=cv.cv,
aes(label=label),
size=3, segment.alpha=0.5, fill="white",
box.padding=0.25,
force=2,
max.overlaps=Inf) +
xlab(glue("log2(CV ({vehicles[i]}))")) +
ylab(glue("log2(CV ({product}_{d}))")) +
labs(title=glue("{product}_{d} (nCells={ncells[[paste0(cell.type, '_', product, '_', d)]]}) vs. {vehicles[i]} (nCells={ncells[[paste0(cell.type, '_', vehicles[i])]]})"),
subtitle=glue("N={cv.cv %>% drop_na(vehicle_cv, treatment_cv) %>% nrow()}, nUP={cv.cv %>% drop_na(vehicle_cv, treatment_cv) %>% filter(cv_direction == 'UP') %>% nrow()}, nDOWN={cv.cv %>% drop_na(vehicle_cv, treatment_cv) %>% filter(cv_direction == 'DOWN') %>% nrow()}
{cv.cv %>% .$label %>% .[!is.na(.) & . != ''] %>% length()} genes with CV fold-change > {cv.diff.thresh} and RPM % difference < {rpm.diff.thresh * 100}%"),
fill="CV direction")
cv.cv.plot.list[[i]] <- cv.cv.plot
}
ggsave(glue("./data/GSE139944/transcriptional_noise/CVvsCV/sciPlex3_CVvsCV_custom_{cell.type}_{product}_{d}.png"),
grid.arrange(grobs=cv.cv.plot.list,
ncol=1, nrow=3,
top=textGrob(glue("Coefficient of variation (CV) of protein coding genes
in {cell.type} cells for {product}_{d} vs. Vehicle (Nrep={nrep.vehicle})"),
gp=gpar(fontsize=20, font=2))),
width=30, height=90, units="cm")
# Plot coefficient of variation distribution across different samples
png(glue("./data/GSE139944/transcriptional_noise/CV/sciPlex3_CV_custom_{cell.type}_{product}_{d}.png"),
width=3000, height=2000, res=300)
ggplot(cv.df, aes(x=sample, y=cv)) +
geom_violin() +
xlab("") +
ylab("CV") +
scale_x_discrete(labels=paste0(samples, " (", ncells, ")")) +
ggtitle(glue("Coefficient of variation of genes across {product} treatments
in {cell.type} cells"))
dev.off()
# Plot CV vs. CV of product_dose vs. vehicle
cv.cv.plot.list <- list()
cv.diff.thresh <- 1.5
rpm.diff.thresh <- 0.1
for (i in 1:length(vehicles)) {
cv.cv <- data.frame(cv.df[cv.df$sample == vehicles[i], "cv"],
cv.df[cv.df$sample == paste0(product, "_", d), "cv"],
cv.df[cv.df$sample == vehicles[i], "mean_rpm"],
cv.df[cv.df$sample == paste0(product, "_", d), "mean_rpm"],
cv.df[cv.df$sample == vehicles[i], "gene_short_name"])
names(cv.cv) <- c("vehicle_cv", "treatment_cv", "vehicle_rpm", "treatment_rpm","gene_short_name")
cv.cv$cv_diff <- cv.cv$treatment_cv / cv.cv$vehicle_cv
cv.cv$cv_direction <- ifelse(cv.cv$treatment_cv > cv.cv$vehicle_cv, "UP", "DOWN")
cv.cv$rpm_diff <- (cv.cv$treatment_rpm - cv.cv$vehicle_rpm) / cv.cv$vehicle_rpm
cv.cv <- cv.cv %>%
mutate(label=ifelse((cv_diff > cv.diff.thresh | cv_diff < 1 / cv.diff.thresh) & abs(rpm_diff) < rpm.diff.thresh,
gene_short_name, ""))
cv.cv <- drop_na(cv.cv, vehicle_cv, treatment_cv)
cv.cv.plot <- cv.cv %>%
ggplot(aes(x=log2(vehicle_cv), y=log2(treatment_cv))) +
geom_abline(intercept=0,
slope=1,
linetype="dashed", size=0.5, color="gray") +
geom_hline(yintercept=0) +
geom_vline(xintercept=0) +
geom_point(aes(fill=cv_direction),
colour="black", pch=21) +
geom_label_repel(data=cv.cv,
aes(label=label),
size=3, segment.alpha=0.5, fill="white",
box.padding=0.25,
force=5,
max.overlaps=Inf) +
xlab(glue("log2(CV ({vehicles[i]}))")) +
ylab(glue("log2(CV ({product}_{d}))")) +
labs(title=glue("{product}_{d} (nCells={ncells[[paste0(cell.type, '_', product, '_', d)]]}) vs. {vehicles[i]} (nCells={ncells[[paste0(cell.type, '_', vehicles[i])]]})"),
subtitle=glue("N={cv.cv %>% drop_na(vehicle_cv, treatment_cv) %>% nrow()}, nUP={cv.cv %>% drop_na(vehicle_cv, treatment_cv) %>% filter(cv_direction == 'UP') %>% nrow()}, nDOWN={cv.cv %>% drop_na(vehicle_cv, treatment_cv) %>% filter(cv_direction == 'DOWN') %>% nrow()}
{cv.cv %>% .$label %>% .[!is.na(.) & . != ''] %>% length()} genes with CV fold-change > {cv.diff.thresh} and RPM % difference < {rpm.diff.thresh * 100}%"),
fill="CV direction")
cv.cv.plot.list[[i]] <- cv.cv.plot
}
ggsave(glue("./data/GSE139944/transcriptional_noise/CVvsCV/sciPlex3_CVvsCV_custom_{cell.type}_{product}_{d}.png"),
grid.arrange(grobs=cv.cv.plot.list,
ncol=1, nrow=3,
top=textGrob(glue("Coefficient of variation (CV) of protein coding genes
in {cell.type} cells for {product}_{d} vs. Vehicle (Nrep={nrep.vehicle})"),
gp=gpar(fontsize=20, font=2))),
width=30, height=90, units="cm")
#### Coefficient of variation ####
cell.type <- "K562"
product <- "Alvespimycin"
d <- 10000
ncells.vehicle <- 250
nrep.vehicle <- 3
vehicles <- paste0("Vehicle_0_rep", 1:nrep.vehicle)
samples <- c(vehicles, paste0(product, "_", d))
# Initialise data frame
cv.df <- data.frame(mean_rpm=numeric(),
cv=numeric(),
gene_short_name=character(),
sample=character())
for (i in 1:length(samples)) {
if (grepl("Vehicle_0", samples[i])) {
# Randomly sample vehicle cells
sample.cells <- filt.col.data[filt.col.data$vehicle, ] %>%
filter(cell_type == cell.type, dose == 0) %>%
sample_n(ncells.vehicle) %>%
rownames()
} else {
sample.cells <- filt.col.data[grep(product, filt.col.data$product_name), ] %>%
filter(cell_type == cell.type, dose == d) %>%
rownames()
}
sample.counts <- filt.counts[, sample.cells]
sample.rpm <- sample.counts / (colSums(sample.counts) / 10^6)
means.sample <- rowMeans(sample.rpm)
cv.sample <- rowSds(sample.rpm) / means.sample
cv.df <- rbind(cv.df,
data.frame(mean_rpm=means.sample,
cv=cv.sample,
gene_short_name=names(means.sample),
sample=rep(samples[i], length(means.sample))))
}
# Get cell number information
ncells <- c(rep(ncells.vehicle, nrep.vehicle),
stack(cell.freq)[grep(glue("{cell.type}_{product}.+_{d}$"),
stack(cell.freq)$ind),
"values"])
names(ncells) <- paste0(cell.type, "_", samples)
# Filter out genes not expressed in any sample
keep.genes <- cv.df %>%
group_by(gene_short_name) %>%
summarize(mean=mean(mean_rpm)) %>%
filter(mean > 0) %>%
.$gene_short_name %>% unique()
cv.df <- cv.df[cv.df$gene_short_name %in% keep.genes, ]
# Set order of samples
cv.df$sample <- factor(cv.df$sample, levels=samples)
# Plot CV vs. CV of product_dose vs. vehicle
cv.cv.plot.list <- list()
cv.diff.thresh <- 1.5
rpm.diff.thresh <- 0.1
for (i in 1:length(vehicles)) {
cv.cv <- data.frame(cv.df[cv.df$sample == vehicles[i], "cv"],
cv.df[cv.df$sample == paste0(product, "_", d), "cv"],
cv.df[cv.df$sample == vehicles[i], "mean_rpm"],
cv.df[cv.df$sample == paste0(product, "_", d), "mean_rpm"],
cv.df[cv.df$sample == vehicles[i], "gene_short_name"])
names(cv.cv) <- c("vehicle_cv", "treatment_cv", "vehicle_rpm", "treatment_rpm","gene_short_name")
cv.cv$cv_diff <- cv.cv$treatment_cv / cv.cv$vehicle_cv
cv.cv$cv_direction <- ifelse(cv.cv$treatment_cv > cv.cv$vehicle_cv, "UP", "DOWN")
cv.cv$rpm_diff <- (cv.cv$treatment_rpm - cv.cv$vehicle_rpm) / cv.cv$vehicle_rpm
cv.cv <- cv.cv %>%
mutate(label=ifelse((cv_diff > cv.diff.thresh | cv_diff < 1 / cv.diff.thresh) & abs(rpm_diff) < rpm.diff.thresh,
gene_short_name, ""))
cv.cv <- drop_na(cv.cv, vehicle_cv, treatment_cv)
cv.cv.plot <- cv.cv %>%
ggplot(aes(x=log2(vehicle_cv), y=log2(treatment_cv))) +
geom_abline(intercept=0,
slope=1,
linetype="dashed", size=0.5, color="gray") +
geom_hline(yintercept=0) +
geom_vline(xintercept=0) +
geom_point(aes(fill=cv_direction),
colour="black", pch=21) +
geom_label_repel(data=cv.cv,
aes(label=label),
size=3, segment.alpha=0.5, fill="white",
box.padding=0.25,
force=5,
max.overlaps=Inf) +
xlab(glue("log2(CV ({vehicles[i]}))")) +
ylab(glue("log2(CV ({product}_{d}))")) +
labs(title=glue("{product}_{d} (nCells={ncells[[paste0(cell.type, '_', product, '_', d)]]}) vs. {vehicles[i]} (nCells={ncells[[paste0(cell.type, '_', vehicles[i])]]})"),
subtitle=glue("N={cv.cv %>% drop_na(vehicle_cv, treatment_cv) %>% nrow()}, nUP={cv.cv %>% drop_na(vehicle_cv, treatment_cv) %>% filter(cv_direction == 'UP') %>% nrow()}, nDOWN={cv.cv %>% drop_na(vehicle_cv, treatment_cv) %>% filter(cv_direction == 'DOWN') %>% nrow()}
{cv.cv %>% .$label %>% .[!is.na(.) & . != ''] %>% length()} genes with CV fold-change > {cv.diff.thresh} and RPM % difference < {rpm.diff.thresh * 100}%"),
fill="CV direction")
cv.cv.plot.list[[i]] <- cv.cv.plot
}
ggsave(glue("./data/GSE139944/transcriptional_noise/CVvsCV/sciPlex3_CVvsCV_custom_{cell.type}_{product}_{d}.png"),
grid.arrange(grobs=cv.cv.plot.list,
ncol=1, nrow=3,
top=textGrob(glue("Coefficient of variation (CV) of protein coding genes
in {cell.type} cells for {product}_{d} vs. Vehicle (Nrep={nrep.vehicle})"),
gp=gpar(fontsize=20, font=2))),
width=30, height=90, units="cm")
