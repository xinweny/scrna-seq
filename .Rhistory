key.xlab="Mean scaled counts per cell")
dev.off()
#### Visualisation ####
# Plot heatmap
png(file="processed/GSE139944/sciPlex3_proteostasis_heatmap.png",
width=6000, height=4000, res=300)
heatmap.2(agg.filt.counts,
Rowv=TRUE,
Colv=TRUE,
main=glue("Mean scaled counts per cell of CORE proteostasis genes (n={nrow(agg.filt.counts)})
in K562 cells treated with HSPi or Vehicle (N={ncol(agg.filt.counts)})"),
dendrogram="both",
scale="none",
col=magma(299),
labCol=colnames(agg.filt.counts), labRow=FALSE,
srtCol=45,
trace="none",
key=TRUE,
density.info="none",
keysize=0.5,
margins=c(10, 2),
key.xlab="Mean scaled counts per cell")
dev.off()
# Plot heatmap
png(file="processed/GSE139944/sciPlex3_proteostasis_heatmap.png",
width=6000, height=4000, res=300)
heatmap.2(agg.filt.counts,
Rowv=TRUE,
Colv=TRUE,
main=glue("Mean scaled counts per cell of CORE proteostasis genes (n={nrow(agg.filt.counts)})
in K562 cells treated with HSPi or Vehicle (N={ncol(agg.filt.counts)})"),
dendrogram="both",
scale="none",
col=magma(299),
labCol=colnames(agg.filt.counts), labRow=FALSE,
srtCol=45,
trace="none",
key=TRUE,
density.info="none",
keysize=0.5,
margins=c(12, 2),
key.xlab="Mean scaled counts per cell")
dev.off()
#### Visualisation ####
# Plot heatmap
png(file="processed/GSE139944/sciPlex3_proteostasis_heatmap.png",
width=6000, height=4000, res=300)
heatmap.2(agg.filt.counts,
Rowv=TRUE,
Colv=TRUE,
main=glue("Mean scaled counts per cell of CORE proteostasis genes (n={nrow(agg.filt.counts)})
in K562 cells treated with HSPi or Vehicle (N={ncol(agg.filt.counts)})"),
dendrogram="both",
scale="none",
col=magma(299),
labCol=colnames(agg.filt.counts), labRow=FALSE,
srtCol=45,
trace="none",
key=TRUE,
density.info="none",
keysize=0.5,
margins=c(15, 2),
key.xlab="Mean scaled counts per cell")
dev.off()
head(counts)
#### Packages ####
library(monocle3)
library(gplots)
library(viridis)
library(glue)
#### Functions ####
aggregate_cols <- function(counts, col.data) {
t.counts <- as.data.frame(t(counts))
t.counts$treatment <- col.data$product_dose_rep
t.counts.agg <- aggregate(t.counts[1:length(t.counts) - 1],
list(t.counts$treatment),
mean)
counts.agg <- t(t.counts.agg)
colnames(counts.agg) <- counts.agg[1, ]
counts.agg <- as.data.frame(counts.agg[-1, ])
counts.agg.mat <- as.matrix(sapply(counts.agg, as.numeric))
rownames(counts.agg.mat) <- rownames(counts.agg)
return(counts.agg.mat)
#
}
#### Config ####
# Set working directory
setwd("~/mrc/project/scrna-seq")
# Parameters
pscount <- 1
#### Load data ####
cds <- readRDS("./processed/GSE139944/GSM4150378_sciPlex3_K562_24hrs.RDS")
proteo.list <- read.csv("~/mrc/project/rna-seq/data/proteostasis_gene_list_16_03_21_NON_CORE0_CORE1.csv",
sep="\t")
# Extract relevant data from S4 Object
counts <- cds@assays$data$counts
col.data <- data.frame(cds@colData)
# Format gene names in count matrix
rownames(counts) <- gsub("\\.[0-9_A-Z]+$", "", rownames(counts))
# Format sample names
col.data$product_dose_rep <- paste0(col.data$product_dose, "_", col.data$replicate)
#### Filtering ####
# Get list of CORE proteostasis genes
proteo.genes <- proteo.list[proteo.list$CORE == "CORE", c("Human_gene_ID")]
# Filter cell metadata for only HDAC inhibitors
filt.col.data <- rbind(col.data[col.data$vehicle, ], col.data[grep("HSP90 activity", col.data$pathway_level_2),])
# Filter for genes and cells of interest
filt.counts <- as.data.frame(as.matrix(counts[which(rownames(counts) %in% proteo.genes),
which(colnames(counts) %in% filt.col.data$cell)]))
# Collapse matrix by average expression per treatment per replicate
agg.filt.counts <- aggregate_cols(filt.counts, filt.col.data)
#### Visualisation ####
# Plot heatmap
png(file="processed/GSE139944/sciPlex3_proteostasis_heatmap.png",
width=6000, height=4000, res=300)
heatmap.2(agg.filt.counts,
Rowv=TRUE,
Colv=TRUE,
main=glue("Mean scaled counts per cell of CORE proteostasis genes (n={nrow(agg.filt.counts)})
in K562 cells treated with HSPi or Vehicle (N={ncol(agg.filt.counts)})"),
dendrogram="both",
scale="none",
col=magma(299),
labCol=colnames(agg.filt.counts), labRow=FALSE,
srtCol=45,
trace="none",
key=TRUE,
density.info="none",
keysize=0.5,
margins=c(15, 2),
key.xlab="Mean scaled counts per cell")
dev.off()
counts
#### Packages ####
library(monocle3)
library(gplots)
library(viridis)
library(glue)
#### Functions ####
aggregate_cols <- function(counts, col.data) {
t.counts <- as.data.frame(t(counts))
t.counts$treatment <- col.data$product_dose_rep
t.counts.agg <- aggregate(t.counts[1:length(t.counts) - 1],
list(t.counts$treatment),
mean)
counts.agg <- t(t.counts.agg)
colnames(counts.agg) <- counts.agg[1, ]
counts.agg <- as.data.frame(counts.agg[-1, ])
counts.agg.mat <- as.matrix(sapply(counts.agg, as.numeric))
rownames(counts.agg.mat) <- rownames(counts.agg)
return(counts.agg.mat)
#
}
#### Config ####
# Set working directory
setwd("~/mrc/project/scrna-seq")
# Parameters
pscount <- 1
#### Load data ####
cds <- readRDS("./processed/GSE139944/GSM4150378_sciPlex3_K562_24hrs.RDS")
proteo.list <- read.csv("~/mrc/project/rna-seq/data/proteostasis_gene_list_16_03_21_NON_CORE0_CORE1.csv",
sep="\t")
# Extract relevant data from S4 Object
counts <- cds@assays$data$counts
col.data <- data.frame(cds@colData)
# Format gene names in count matrix
rownames(counts) <- gsub("\\.[0-9_A-Z]+$", "", rownames(counts))
# Format sample names
col.data$product_dose_rep <- paste0(col.data$product_dose, "_", col.data$replicate)
#### Normalisation ####
# Normalise by size factor
counts <- t(t(counts) / col.data$Size_Factor)
#### Filtering ####
# Get list of CORE proteostasis genes
proteo.genes <- proteo.list[proteo.list$CORE == "CORE", c("Human_gene_ID")]
# Filter cell metadata for only HDAC inhibitors
filt.col.data <- rbind(col.data[col.data$vehicle, ], col.data[grep("HSP90 activity", col.data$pathway_level_2),])
# Filter for genes and cells of interest
filt.counts <- as.data.frame(as.matrix(counts[which(rownames(counts) %in% proteo.genes),
which(colnames(counts) %in% filt.col.data$cell)]))
# Collapse matrix by average expression per treatment per replicate
agg.filt.counts <- aggregate_cols(filt.counts, filt.col.data)
#### Visualisation ####
# Plot heatmap
png(file="processed/GSE139944/sciPlex3_proteostasis_heatmap.png",
width=6000, height=4000, res=300)
heatmap.2(agg.filt.counts,
Rowv=TRUE,
Colv=TRUE,
main=glue("Mean scaled counts per cell of CORE proteostasis genes (n={nrow(agg.filt.counts)})
in K562 cells treated with HSPi or Vehicle (N={ncol(agg.filt.counts)})"),
dendrogram="both",
scale="none",
col=magma(299),
labCol=colnames(agg.filt.counts), labRow=FALSE,
srtCol=45,
trace="none",
key=TRUE,
density.info="none",
keysize=0.5,
margins=c(15, 2),
key.xlab="Mean scaled counts per cell")
dev.off()
cell.type <- "A549"
#### Packages ####
library(monocle3)
library(gplots)
library(viridis)
library(glue)
#### Functions ####
aggregate_cols <- function(counts, col.data) {
t.counts <- as.data.frame(t(counts))
t.counts$treatment <- col.data$product_dose_rep
t.counts.agg <- aggregate(t.counts[1:length(t.counts) - 1],
list(t.counts$treatment),
mean)
counts.agg <- t(t.counts.agg)
colnames(counts.agg) <- counts.agg[1, ]
counts.agg <- as.data.frame(counts.agg[-1, ])
counts.agg.mat <- as.matrix(sapply(counts.agg, as.numeric))
rownames(counts.agg.mat) <- rownames(counts.agg)
return(counts.agg.mat)
#
}
#### Config ####
# Set working directory
setwd("~/mrc/project/scrna-seq")
# Parameters
pscount <- 1
cell.type <- "A549"
#### Load data ####
cds <- readRDS(glue("./processed/GSE139944/GSM4150378_sciPlex3_{cell.type}_24hrs.RDS"))
proteo.list <- read.csv("~/mrc/project/rna-seq/data/proteostasis_gene_list_16_03_21_NON_CORE0_CORE1.csv",
sep="\t")
# Extract relevant data from S4 Object
counts <- cds@assays$data$counts
col.data <- data.frame(cds@colData)
# Format gene names in count matrix
rownames(counts) <- gsub("\\.[0-9_A-Z]+$", "", rownames(counts))
# Format sample names
col.data$product_dose_rep <- paste0(col.data$product_dose, "_", col.data$replicate)
#### Normalisation ####
# Normalise by size factor
counts <- t(t(counts) / col.data$Size_Factor)
#### Filtering ####
# Get list of CORE proteostasis genes
proteo.genes <- proteo.list[proteo.list$CORE == "CORE", c("Human_gene_ID")]
# Filter cell metadata for only HDAC inhibitors
filt.col.data <- rbind(col.data[col.data$vehicle, ], col.data[grep("HSP90 activity", col.data$pathway_level_2),])
# Filter for genes and cells of interest
filt.counts <- as.data.frame(as.matrix(counts[which(rownames(counts) %in% proteo.genes),
which(colnames(counts) %in% filt.col.data$cell)]))
# Collapse matrix by average expression per treatment per replicate
agg.filt.counts <- aggregate_cols(filt.counts, filt.col.data)
#### Visualisation ####
# Plot heatmap
png(file="processed/GSE139944/sciPlex3_{cell.type}_proteostasis_heatmap.png",
width=6000, height=4000, res=300)
heatmap.2(agg.filt.counts,
Rowv=TRUE,
Colv=TRUE,
main=glue("Mean scaled counts per cell of CORE proteostasis genes (n={nrow(agg.filt.counts)})
in {cell.type} cells treated with HSPi or Vehicle (N={ncol(agg.filt.counts)})"),
dendrogram="both",
scale="none",
col=magma(299),
labCol=colnames(agg.filt.counts), labRow=FALSE,
srtCol=45,
trace="none",
key=TRUE,
density.info="none",
keysize=0.5,
margins=c(15, 2),
key.xlab="Mean scaled counts per cell")
dev.off()
View(col.data)
View(col.data)
#### Packages ####
library(monocle3)
library(gplots)
library(viridis)
library(glue)
#### Functions ####
aggregate_cols <- function(counts, col.data) {
t.counts <- as.data.frame(t(counts))
t.counts$treatment <- col.data$product_dose_rep
t.counts.agg <- aggregate(t.counts[1:length(t.counts) - 1],
list(t.counts$treatment),
mean)
counts.agg <- t(t.counts.agg)
colnames(counts.agg) <- counts.agg[1, ]
counts.agg <- as.data.frame(counts.agg[-1, ])
counts.agg.mat <- as.matrix(sapply(counts.agg, as.numeric))
rownames(counts.agg.mat) <- rownames(counts.agg)
return(counts.agg.mat)
#
}
#### Config ####
# Set working directory
setwd("~/mrc/project/scrna-seq")
# Parameters
pscount <- 1
cell.type <- "A549"
#### Load data ####
cds <- readRDS(glue("./processed/GSE139944/GSM4150378_sciPlex3_{cell.type}_24hrs.RDS"))
proteo.list <- read.csv("~/mrc/project/rna-seq/data/proteostasis_gene_list_16_03_21_NON_CORE0_CORE1.csv",
sep="\t")
# Extract relevant data from S4 Object
counts <- cds@assays$data$counts
col.data <- data.frame(cds@colData)
# Format gene names in count matrix
rownames(counts) <- gsub("\\.[0-9_A-Z]+$", "", rownames(counts))
# Format sample names
col.data$product_dose_rep <- paste0(col.data$product_dose, "_", col.data$replicate)
#### Normalisation ####
# Normalise by size factor
counts <- t(t(counts) / col.data$Size_Factor)
#### Filtering ####
# Get list of CORE proteostasis genes
proteo.genes <- proteo.list[proteo.list$CORE == "CORE", c("Human_gene_ID")]
# Filter cell metadata for only HDAC inhibitors
filt.col.data <- rbind(col.data[col.data$vehicle, ], col.data[grep("HSP90 activity", col.data$pathway_level_2),])
# Filter for genes and cells of interest
filt.counts <- as.data.frame(as.matrix(counts[which(rownames(counts) %in% proteo.genes),
which(colnames(counts) %in% filt.col.data$cell)]))
# Collapse matrix by average expression per treatment per replicate
agg.filt.counts <- aggregate_cols(filt.counts, filt.col.data)
#### Visualisation ####
# Plot heatmap
png(file=glue("processed/GSE139944/sciPlex3_{cell.type}_proteostasis_heatmap.png"),
width=6000, height=4000, res=300)
heatmap.2(agg.filt.counts,
Rowv=TRUE,
Colv=TRUE,
main=glue("Mean scaled counts per cell of CORE proteostasis genes (n={nrow(agg.filt.counts)})
in {cell.type} cells treated with HSP90i or Vehicle (N={ncol(agg.filt.counts)})"),
dendrogram="both",
scale="none",
col=magma(299),
labCol=colnames(agg.filt.counts), labRow=FALSE,
srtCol=45,
trace="none",
key=TRUE,
density.info="none",
keysize=0.5,
margins=c(15, 2),
key.xlab="Mean scaled counts per cell")
dev.off()
# Plot heatmap
png(file=glue("processed/GSE139944/sciPlex3_{cell.type}_proteostasis_heatmap.png"),
width=6000, height=4000, res=300)
heatmap.2(agg.filt.counts,
Rowv=TRUE,
Colv=TRUE,
main=glue("Mean scaled counts per cell of CORE proteostasis genes (n={nrow(agg.filt.counts)})
in {cell.type} cells treated with HSP90 inhibitors or Vehicle (N={ncol(agg.filt.counts)})"),
dendrogram="both",
scale="none",
col=magma(299),
labCol=colnames(agg.filt.counts), labRow=FALSE,
srtCol=45,
trace="none",
key=TRUE,
density.info="none",
keysize=0.5,
margins=c(15, 2),
key.xlab="Mean scaled counts per cell")
dev.off()
#### Packages ####
library(monocle3)
library(gplots)
library(viridis)
library(glue)
#### Functions ####
aggregate_cols <- function(counts, col.data) {
t.counts <- as.data.frame(t(counts))
t.counts$treatment <- col.data$product_dose_rep
t.counts.agg <- aggregate(t.counts[1:length(t.counts) - 1],
list(t.counts$treatment),
mean)
counts.agg <- t(t.counts.agg)
colnames(counts.agg) <- counts.agg[1, ]
counts.agg <- as.data.frame(counts.agg[-1, ])
counts.agg.mat <- as.matrix(sapply(counts.agg, as.numeric))
rownames(counts.agg.mat) <- rownames(counts.agg)
return(counts.agg.mat)
#
}
#### Config ####
# Set working directory
setwd("~/mrc/project/scrna-seq")
# Parameters
pscount <- 1
cell.type <- "K562" # K562, A549, MCF7
#### Load data ####
cds <- readRDS(glue("./processed/GSE139944/GSM4150378_sciPlex3_{cell.type}_24hrs.RDS"))
proteo.list <- read.csv("~/mrc/project/rna-seq/data/proteostasis_gene_list_16_03_21_NON_CORE0_CORE1.csv",
sep="\t")
# Extract relevant data from S4 Object
counts <- cds@assays$data$counts
col.data <- data.frame(cds@colData)
# Format gene names in count matrix
rownames(counts) <- gsub("\\.[0-9_A-Z]+$", "", rownames(counts))
# Format sample names
col.data$product_dose_rep <- paste0(col.data$product_dose, "_", col.data$replicate)
#### Normalisation ####
# Normalise by size factor
counts <- t(t(counts) / col.data$Size_Factor)
#### Filtering ####
# Get list of CORE proteostasis genes
proteo.genes <- proteo.list[proteo.list$CORE == "CORE", c("Human_gene_ID")]
# Filter cell metadata for only HDAC inhibitors
filt.col.data <- rbind(col.data[col.data$vehicle, ], col.data[grep("HSP90 activity", col.data$pathway_level_2),])
# Filter for genes and cells of interest
filt.counts <- as.data.frame(as.matrix(counts[which(rownames(counts) %in% proteo.genes),
which(colnames(counts) %in% filt.col.data$cell)]))
# Collapse matrix by average expression per treatment per replicate
agg.filt.counts <- aggregate_cols(filt.counts, filt.col.data)
#### Visualisation ####
# Plot heatmap
png(file=glue("processed/GSE139944/sciPlex3_{cell.type}_proteostasis_heatmap.png"),
width=6000, height=4000, res=300)
heatmap.2(agg.filt.counts,
Rowv=TRUE,
Colv=TRUE,
main=glue("Mean scaled counts per cell of CORE proteostasis genes (n={nrow(agg.filt.counts)})
in {cell.type} cells treated with HSP90 inhibitors or Vehicle (N={ncol(agg.filt.counts)})"),
dendrogram="both",
scale="none",
col=magma(299),
labCol=colnames(agg.filt.counts), labRow=FALSE,
srtCol=45,
trace="none",
key=TRUE,
density.info="none",
keysize=0.5,
margins=c(15, 2),
key.xlab="Mean scaled counts per cell")
dev.off()
#### Packages ####
library(monocle3)
library(gplots)
library(viridis)
library(glue)
#### Functions ####
aggregate_cols <- function(counts, col.data) {
t.counts <- as.data.frame(t(counts))
t.counts$treatment <- col.data$product_dose_rep
t.counts.agg <- aggregate(t.counts[1:length(t.counts) - 1],
list(t.counts$treatment),
mean)
counts.agg <- t(t.counts.agg)
colnames(counts.agg) <- counts.agg[1, ]
counts.agg <- as.data.frame(counts.agg[-1, ])
counts.agg.mat <- as.matrix(sapply(counts.agg, as.numeric))
rownames(counts.agg.mat) <- rownames(counts.agg)
return(counts.agg.mat)
#
}
#### Config ####
# Set working directory
setwd("~/mrc/project/scrna-seq")
# Parameters
pscount <- 1
cell.type <- "MCF7" # K562, A549, MCF7
#### Load data ####
cds <- readRDS(glue("./processed/GSE139944/GSM4150378_sciPlex3_{cell.type}_24hrs.RDS"))
proteo.list <- read.csv("~/mrc/project/rna-seq/data/proteostasis_gene_list_16_03_21_NON_CORE0_CORE1.csv",
sep="\t")
# Extract relevant data from S4 Object
counts <- cds@assays$data$counts
col.data <- data.frame(cds@colData)
# Format gene names in count matrix
rownames(counts) <- gsub("\\.[0-9_A-Z]+$", "", rownames(counts))
# Format sample names
col.data$product_dose_rep <- paste0(col.data$product_dose, "_", col.data$replicate)
#### Normalisation ####
# Normalise by size factor
counts <- t(t(counts) / col.data$Size_Factor)
#### Filtering ####
# Get list of CORE proteostasis genes
proteo.genes <- proteo.list[proteo.list$CORE == "CORE", c("Human_gene_ID")]
# Filter cell metadata for only HDAC inhibitors
filt.col.data <- rbind(col.data[col.data$vehicle, ], col.data[grep("HSP90 activity", col.data$pathway_level_2),])
# Filter for genes and cells of interest
filt.counts <- as.data.frame(as.matrix(counts[which(rownames(counts) %in% proteo.genes),
which(colnames(counts) %in% filt.col.data$cell)]))
# Collapse matrix by average expression per treatment per replicate
agg.filt.counts <- aggregate_cols(filt.counts, filt.col.data)
#### Visualisation ####
# Plot heatmap
png(file=glue("processed/GSE139944/sciPlex3_{cell.type}_proteostasis_heatmap.png"),
width=6000, height=4000, res=300)
heatmap.2(agg.filt.counts,
Rowv=TRUE,
Colv=TRUE,
main=glue("Mean scaled counts per cell of CORE proteostasis genes (n={nrow(agg.filt.counts)})
in {cell.type} cells treated with HSP90 inhibitors or Vehicle (N={ncol(agg.filt.counts)})"),
dendrogram="both",
scale="none",
col=magma(299),
labCol=colnames(agg.filt.counts), labRow=FALSE,
srtCol=45,
trace="none",
key=TRUE,
density.info="none",
keysize=0.5,
margins=c(15, 2),
key.xlab="Mean scaled counts per cell")
dev.off()
head(counts)
rm(list=ls())
